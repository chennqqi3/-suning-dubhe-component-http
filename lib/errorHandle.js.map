{"version":3,"sources":["../src/errorHandle.js"],"names":["module","exports","app","option","resultCode","config","successCode","alertMessage","constant","resolve","msg","service","$q","errors","AlertService","LoginService","handle","data","defer","defaultMessage","message","appIdHandler","reject","alert","title","content","promise","idsIntercepted","jumpLogin","length","i","code","callback","noMsgCode"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAAUC,GAAV,EAMd;AAAA,QAN6BC,MAM7B,uEANsC;AACrCC,oBAAY,EADyB;AAErCC,gBAAQ;AACJC,yBAAa,GADT;AAEJC,0BAAc;AAFV;AAF6B,KAMtC;;AACCL,QAAIM,QAAJ,CAAa,QAAb,EAAuB;AACnB,aAAK,iBADc;AAEnB,aAAK;AACD;AACAC,qBAAS,IAFR;AAGDC,iBAAK;AAHJ,SAFc;AAOnB,aAAK;AAPc,KAAvB,EAQGC,OARH,CAQW,aARX,EAQ0B,CAAC,IAAD,EAAO,QAAP,EAAiB,cAAjB,EAAiC,cAAjC,EACtB,UAAUC,EAAV,EAAcC,MAAd,EAAsBC,YAAtB,EAAoCC,YAApC,EAAkD;AAC9C;;AACA,eAAO;AACHC,oBAAQ,gBAAUC,IAAV,EAAgB;AACpB,oBAAIC,QAAQN,GAAGM,KAAH,EAAZ;AAAA,oBACIC,iBAAiB,iBADrB;AAAA,oBAEIC,UAAUH,KAAKG,OAAL,IAAgBD,cAF9B;;AAIA;AACA,oBAAIhB,OAAOkB,YAAX,EAAyB;AACrB,wBAAIC,SAASnB,OAAOkB,YAAP,CAAoBJ,IAApB,CAAb;AACA,wBAAIK,MAAJ,EAAY;AACRR,qCAAaS,KAAb,CAAmB;AACfC,mCAAO,MADQ;AAEfC,qCAASH,OAAOF;AAFD,yBAAnB;AAIAF,8BAAMI,MAAN,CAAaL,IAAb;AACA,+BAAOC,MAAMQ,OAAb;AACH;AACJ;;AAED,oBAAIT,KAAKU,cAAT,EAAyB;AACrBZ,iCAAaa,SAAb,CAAuBX,IAAvB;AACAC,0BAAMI,MAAN,CAAaL,IAAb;AACA,2BAAOC,MAAMQ,OAAb;AACH;;AAED,oBAAItB,aAAaD,OAAOC,UAAxB;AACA,oBAAIA,cAAcA,WAAWyB,MAA7B,EAAqC;AACjC,yBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI1B,WAAWyB,MAA/B,EAAuCC,GAAvC,EAA4C;AACxC,4BAAIb,KAAKb,UAAL,KAAoBA,WAAW0B,CAAX,EAAcC,IAAtC,EAA4C;AACxC3B,uCAAW0B,CAAX,EAAcE,QAAd,IAA0B5B,WAAW0B,CAAX,EAAcE,QAAd,CAAuBd,KAAvB,EAA8BD,IAA9B,CAA1B;AACH;AACJ;AACJ;;AAED,oBAAIA,KAAKb,UAAL,KAAoBD,OAAOE,MAAP,CAAcC,WAAtC,EAAmD;AAC/CY,0BAAMT,OAAN,CAAcQ,KAAKA,IAAnB;AACH,iBAFD,MAEO;AACH,wBAAId,OAAOE,MAAP,CAAcE,YAAd,IAA8BU,KAAKb,UAAL,KAAoBD,OAAOE,MAAP,CAAc4B,SAApE,EAA+E;AAC3EnB,qCAAaS,KAAb,CAAmB;AACfC,mCAAO,MADQ;AAEfC,qCAASL;AAFM,yBAAnB;AAIH;AACDF,0BAAMI,MAAN,CAAaL,IAAb;AACH;AACD,uBAAOC,MAAMQ,OAAb;AACH;AA9CE,SAAP;AAgDH,KAnDqB,CAR1B;AA6DH,CApED","file":"errorHandle.js","sourcesContent":["module.exports = function (app, option = {\r\n    resultCode: [],\r\n    config: {\r\n        successCode: '0',\r\n        alertMessage: true,\r\n    }\r\n}) {\r\n    app.constant('errors', {\r\n        500: '系统出了点小问题，请稍后重试！',\r\n        401: {\r\n            //需到controller中单独处理的错误\r\n            resolve: true,\r\n            msg: '（未授权） 请求要求身份验证'\r\n        },\r\n        404: '（未找到） 服务器找不到请求的网页'\r\n    }).service('ErrorHandle', ['$q', 'errors', 'AlertService', 'LoginService',\r\n        function ($q, errors, AlertService, LoginService) {\r\n            'use strict';\r\n            return {\r\n                handle: function (data) {\r\n                    var defer = $q.defer(),\r\n                        defaultMessage = '系统出了点小问题，请稍后重试！',\r\n                        message = data.message || defaultMessage;\r\n\r\n                    //phoebus进入页面时，提示缺少appId\r\n                    if (option.appIdHandler) {\r\n                        let reject = option.appIdHandler(data)\r\n                        if (reject) {\r\n                            AlertService.alert({\r\n                                title: '提示信息',\r\n                                content: reject.message\r\n                            });\r\n                            defer.reject(data);\r\n                            return defer.promise;\r\n                        }\r\n                    }\r\n\r\n                    if (data.idsIntercepted) {\r\n                        LoginService.jumpLogin(data);\r\n                        defer.reject(data);\r\n                        return defer.promise;\r\n                    }\r\n\r\n                    var resultCode = option.resultCode\r\n                    if (resultCode && resultCode.length) {\r\n                        for (var i = 0; i < resultCode.length; i++) {\r\n                            if (data.resultCode === resultCode[i].code) {\r\n                                resultCode[i].callback && resultCode[i].callback(defer, data)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (data.resultCode === option.config.successCode) {\r\n                        defer.resolve(data.data);\r\n                    } else {\r\n                        if (option.config.alertMessage && data.resultCode !== option.config.noMsgCode) {\r\n                            AlertService.alert({\r\n                                title: '提示信息',\r\n                                content: message\r\n                            });\r\n                        }\r\n                        defer.reject(data);\r\n                    }\r\n                    return defer.promise;\r\n                }\r\n            };\r\n        }\r\n    ]);\r\n}"]}